#include <iostream>
#include <string>
using namespace std;
int main()
{
    setlocale(LC_ALL, "rus");               //kekk syz  efa    opq ckm zad
    string s, sort(""), posl("");
    int n(2), first(0), flag(0);            //n=2 чтобы в первое слово входил пробел
    cout<<"Введите строку"<<endl;
    getline(cin, s);   
    for(int i=0; i<s.size(); i++)
    {
        if(s[i+1]==' ' || i+1>=s.size())//если текущий символ последний в слове или последний в строке
        {
            if(s[i+1]==' ')             
                while(s[i+1]==' ' && i+1<s.size())  //пропуск пробелов после слова
                    i++;
            if(!flag)                               //если буквы в слове стоят в алфавитном порядке
                sort+=s.substr(first, n);           //копирование слова в другую строку
            first=i+1;                              //индекс первой буквы след слова 
            flag=0;                                 //подготовка к след итерации
            n=2;                                    //т.к. i будет индексом ВТОРОЙ буквы (first-индекс первой буквы)
        }
        else
        {
            if(s[i]>s[i+1])                     //проверка слова на алфавитный порядок букв      
                flag=1;                         //флажок
            n++;                                //кол-во букв в слове
        }    
    }
    if(sort.empty()==false)
    {
        first=0; n=1; flag=0;
        int F=0;                                    //флажок полного вхождения одного слова в другое
        posl+=sort.substr(sort.rfind(' ')+1);       //копирование последнего слова в другую строку
        for(int i=0; i<sort.rfind(' ');)            //проход по строке (без последнего слова)
        {
            if(sort[first]>=posl[0])                //поиск последнего слова в лексик. порядке
            {
                while(sort[i]!=' ' && i<sort.rfind(' '))//пропуск слова и подсчет букв текущего слова
                        { i++; n++; }
                if(sort[first]==posl[0])                        //если в словах одинаковые буквы
                {    
                    int j=1;
                    while(j<posl.size() && j<n)                 //поиск не одинаковых букв в словах
                    {   
                        if(sort[j]<posl[j]){ flag=1; break; }   
                        j++;    
                    }
                    if(flag==0 && n<posl.size()) F=1;//если в текущее слово полностью входит сравниваемое с ним слово
                }    
                if(flag==0 && F==0)     //если текущее слово больше чем локальное последнее 
                {
                    posl.clear();                       //очистка строки
                    posl+=sort.substr(first, n);        //копирование нового слова
                }
                first=i++;                          //индекс первой буквы след слова
                i+=2;                               //индекс второй буквы след слова
                n=2; flag=0; F=0;
            }
            else                                    //пропуск текущего слова если его первый символ меньше первого символа локально последнего слова
            {
                while(sort[i]!=' ' && i<sort.rfind(' '))
                    i++; 
                first=i++; 
                i+=2;    
            }    
        }
        cout<<"Слова в алфавитном порядке: "<<sort<<endl<<"Последнее в лексикографическом порядке: "<<posl<<endl;
    }    
    return 0;
}
/*
ТЕСТЫ:
"abcd  bad abc fad ab"
Слова в алфавитном порядке: "abcd abc ab"
Последнее в лексикографическом порядке: "abcd"
------------------------------------------------
"xyz bad ced abc abcde bcd"
Слова в алфавитном порядке: "xyz abc abcde bcd"
Последнее в лексикографическом порядке: "xyz"
*/
